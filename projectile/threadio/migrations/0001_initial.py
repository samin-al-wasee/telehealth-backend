# Generated by Django 4.2.1 on 2023-09-07 07:52

import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("appointmentio", "0003_treatedcondition_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("accountio", "0003_prescriptionadditionalconnector_primary_disease_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Inbox",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "kind",
                    models.CharField(
                        choices=[("PRIVATE", "Private"), ("SHARED", "Shared")],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("ARCHIVED", "Archived"),
                            ("REMOVED", "Removed"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                ("unread_count", models.PositiveIntegerField(default=0)),
                ("seen_at", models.DateTimeField(auto_now_add=True)),
                (
                    "appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="appointmentio.appointment",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="accountio.organization",
                    ),
                ),
            ],
            options={
                "ordering": ("-updated_at",),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Thread",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "kind",
                    models.CharField(
                        choices=[("PARENT", "Parent"), ("CHILD", "Child")],
                        default="PARENT",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=500, null=True)),
                ("content", models.TextField(blank=True)),
                ("reply_count", models.PositiveIntegerField(default=0)),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "author",
                    models.ForeignKey(
                        help_text="The 'User' who created the feed.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="author_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="threadio.thread",
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        blank=True,
                        through="threadio.Inbox",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("created_at",),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.AddField(
            model_name="inbox",
            name="thread",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="threadio.thread"
            ),
        ),
        migrations.AddField(
            model_name="inbox",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inbox",
            unique_together={
                ("thread", "user", "appointment"),
                ("thread", "user", "organization"),
            },
        ),
        migrations.AlterIndexTogether(
            name="inbox",
            index_together={
                ("thread", "user", "appointment"),
                ("thread", "user", "organization"),
            },
        ),
    ]
